{% for module, module_status in nginx.dynamic_modules.items() %}{% if module_status %}
load_module {{ nginx.dynamic_modules_path }}/{{ module }};
{% endif %}{% endfor %}

worker_processes {{ nginx.worker_processes }};

events {
    worker_connections 1024;
}

user {{ nginx.user }};

http {
    include mime.types;
    default_type application/octet-stream;

    server_tokens off;
    sendfile on;
    keepalive_timeout 65;

    log_format main '$host $remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

    log_format json escape=json '{{ '{' }}{% for item in nginx.log_formats.json.fields|dict2items|rejectattr('value', 'none') %}"{{ item.key }}": "{{ item.value }}"{% if not loop.last %}, {% endif %}{% endfor %}{{ '}' }}';

    access_log {{ nginx.prefix.log }}/access.log {{ nginx.log_format }};
    error_log {{ nginx.prefix.log }}/error.log;

    resolver {{ ' '.join(nginx.nameservers) }} valid={{ nginx.nameservers_valid }} ipv6={{ nginx.nameservers_ipv6 }};
    resolver_timeout 5s;

    proxy_ssl_trusted_certificate /usr/local/share/certs/ca-root-nss.crt;

    # $ensure_request_id will contain the value of the X-Request-ID header if it exists,
    # otherwise it will contain a newly generated request id.
    map $http_x_request_id $ensure_request_id {
        default $http_x_request_id;
        ""      $request_id;
    }

    {% if nginx.real_ip_header %}
    real_ip_header {{ nginx.real_ip_header }};
    {% endif %}
    {% for set_real_ip_from in nginx.set_real_ip_from.values()|reject('eq', none) %}
    set_real_ip_from {{ set_real_ip_from }};
    {% endfor %}

    {% if ansible_local.proserver|default(none) and ansible_local.proserver.routing.gate64_ip_address %}
    # If the request uses PROXY protocol, set the X-Real-IP request header to the client address from PROXY protocol.
    # If the request originates from the proServer`s gate64 IP address, use the value from X-Real-IP as client address.
    map $proxy_protocol_addr $x_real_ip {
        default $proxy_protocol_addr;
        ""      $http_x_real_ip;
    }
    more_set_input_headers "X-Real-IP: $x_real_ip";
    set_real_ip_from {{ ansible_local.proserver.routing.gate64_ip_address }};
    {% endif %}

    gzip on;
    gzip_vary on;
    gzip_comp_level 2;
    gzip_types
        text/plain
        text/css
        text/xml
        application/xhtml+xml
        application/rss+xml
        application/atom+xml
        application/javascript
        application/json
        image/svg+xml
        image/vnd.microsoft.icon
        application/vnd.ms-fontobject
        application/x-font-opentype
        application/x-font-truetype
        application/x-font-ttf
        font/eot
        font/opentype
        font/otf
    ;

    {% if nginx.stub_status_port -%}
    server {
        listen 127.0.0.1:{{ nginx.stub_status_port }};
        listen [::1]:{{ nginx.stub_status_port }};

        stub_status;
        server_tokens on;
    }
    {% endif -%}

    include {{ nginx.prefix.config }}/http.d/*.conf;
}

{% if nginx.dynamic_modules['ngx_stream_module.so'] %}
stream {
    include {{ nginx.prefix.config }}/stream.d/*.conf;
}
{% endif %}
