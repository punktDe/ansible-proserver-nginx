{% if dehydrated|cert_exists(ansible_fqdn) %}
server {
    listen 0.0.0.0:80 default_server;
    listen [::]:80 default_server;
    {% if ansible_local.proserver.routing.with_gate64 -%}
    listen [::1]:87 proxy_protocol;
    {%- endif %}

    root /var/null;

    location / {
        return 301 https://$host$request_uri;
    }

    include {{ nginx.prefix.config }}/include/letsencrypt.conf;
}

server {
    listen 0.0.0.0:443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    {% if ansible_local.proserver.routing.with_gate64 -%}
    listen [::1]:57 ssl http2 proxy_protocol;
    {%- endif %}

    root /var/null;

    include {{ nginx.prefix.config }}/include/security_headers.conf;

    ssl_certificate {{ dehydrated|cert_fullchain(ansible_fqdn) }};
    ssl_certificate_key {{ dehydrated|cert_privkey(ansible_fqdn) }};
    ssl_trusted_certificate {{ dehydrated|cert_chain(ansible_fqdn) }};
    include {{ nginx.prefix.config }}/include/https_params.conf;
}
{% else %}
server {
    listen 0.0.0.0:80 default_server;
    listen [::]:80 default_server;
    {% if ansible_local.proserver.routing.with_gate64 -%}
    listen [::1]:87 proxy_protocol;
    {%- endif %}

    root /var/null;
}
{% endif %}

{% if nginx.ansible_info.server_name %}
server {
    listen 0.0.0.0:80;
    listen [::]:80;
    {% if ansible_local.proserver.routing.with_gate64 -%}
    listen [::1]:87 proxy_protocol;
    {%- endif %}

    server_name {{ nginx.ansible_info.server_name }};

    root /dev/null/404;

    include {{ nginx.prefix.config }}/include/letsencrypt.conf;

{% if dehydrated|cert_exists(nginx.ansible_info.server_name) %}
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 0.0.0.0:443 ssl http2;
    listen [::]:443 ssl http2;
    {% if ansible_local.proserver.routing.with_gate64 -%}
    listen [::1]:57 ssl http2 proxy_protocol;
    {%- endif %}

    server_name {{ nginx.ansible_info.server_name }};

    root /dev/null/404;

    ssl_certificate {{ dehydrated|cert_fullchain(nginx.ansible_info.server_name) }};
    ssl_certificate_key {{ dehydrated|cert_privkey(nginx.ansible_info.server_name) }};
    ssl_trusted_certificate {{ dehydrated|cert_chain(nginx.ansible_info.server_name) }};
    include {{ nginx.prefix.config }}/include/https_params.conf;

{% endif %}
    location = / {
        add_header Content-Type application/json;
        return 200 '{"inventory_hostname": "{{ inventory_hostname }}"}';
    }

    {% if nginx.ansible_info.private_api %}
    location {{ nginx.ansible_info.private_api }} {
        add_header Content-Type application/json;
        return 200 '{"inventory_hostname": "{{ inventory_hostname }}", "groups": {{ group_names|to_json }}, "https_endpoints": {{ (dehydrated.domains.keys()|list + dehydrated.domains.values()|sum(start=[]))|to_json }}}';
    }
    {% endif %}

    include {{ nginx.prefix.config }}/include/security_headers.conf;
}
{% endif %}
