{% for src, dest in nginx.moved_permanently.items() | list + nginx.redirects.items()|list %}
{% set src = src | urlsplit() %}
{% set dest = dest if dest is mapping else {'url': dest} %}
{% if src.scheme == 'http' %}
server {
    listen 0.0.0.0:{{ src.port | default(80, true) }};
    listen [::]:{{ src.port | default(80, true) }};
    {% if ansible_local.proserver | default(none) and ansible_local.proserver.routing.with_gate64 and src.port | default(80, true) == 80 -%}
    listen [::1]:87 proxy_protocol;
    {%- endif %}

    server_name {{ src.hostname }};

    root /var/null;

    location / {
        return {{ dest['code'] | default(301) }} {{ dest['url'] }}{{ '$request_uri' if dest['uri'] | default(true) else '' }};
    }

    include {{ nginx.prefix.config }}/include/letsencrypt.conf;
}
{% elif src.scheme == 'https' %}
server {
    {% if nginx_separate_http2 %}
    listen 0.0.0.0:{{ src.port | default(443, true) }} ssl;
    listen [::]:{{ src.port | default(443, true) }} ssl;
    http2 on;
    {% else %}
    listen 0.0.0.0:{{ src.port | default(443, true) }} ssl http2;
    listen [::]:{{ src.port | default(443, true) }} ssl http2;
    {% endif %}
    {% if ansible_local.proserver | default(none) and ansible_local.proserver.routing.with_gate64 and src.port | default(443, true) == 443 -%}
    listen [::1]:57 ssl {{ '' if nginx_separate_http2 else 'http2' }} proxy_protocol;
    {%- endif %}

    server_name {{ src.hostname }};

    root /var/null;

    include {{ nginx.prefix.config }}/include/security_headers.conf;

    location / {
        return {{ dest['code'] | default(301) }} {{ dest['url'] }}{{ '$request_uri' if dest['uri'] | default(true) else '' }};
    }

    ssl_certificate {{ dehydrated | cert_fullchain(src.hostname) }};
    ssl_certificate_key {{ dehydrated | cert_privkey(src.hostname) }};
    ssl_trusted_certificate {{ dehydrated | cert_chain(src.hostname) }};
    include {{ nginx.prefix.config }}/include/https_params.conf;
}
{% endif %}
{% endfor %}
