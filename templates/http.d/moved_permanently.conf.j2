{% for src, dest in nginx.moved_permanently.items() %}
{% set src = src|urlsplit() %}
{% if src.scheme == 'http' %}
server {
    listen 0.0.0.0:{{ src.port|default(80, true) }};
    listen [::]:{{ src.port|default(80, true) }};
    {% if ansible_local.proserver.routing.with_gate64 and src.port|default(80, true) == 80 -%}
    listen [::1]:87 proxy_protocol;
    set_real_ip_from {{ ansible_local.proserver.routing.gate64_ip_address }};
    {%- endif %}

    server_name {{ src.hostname }};

    root /var/null;

    location / {
        return 301 {{ dest }}$request_uri;
    }

    include {{ nginx.prefix.config }}/include/letsencrypt.conf;
}
{% elif src.scheme == 'https' %}
server {
    listen 0.0.0.0:{{ src.port|default(443, true) }} ssl http2;
    listen [::]:{{ src.port|default(443, true) }} ssl http2;
    {% if ansible_local.proserver.routing.with_gate64 and src.port|default(443, true) == 443 -%}
    listen [::1]:57 ssl http2 proxy_protocol;
    set_real_ip_from {{ ansible_local.proserver.routing.gate64_ip_address }};
    {%- endif %}

    server_name {{ src.hostname }};

    root /var/null;

    include {{ nginx.prefix.config }}/include/security_headers.conf;

    location / {
        return 301 {{ dest }}$request_uri;
    }

    ssl_certificate {{ dehydrated|cert_fullchain(src.hostname) }};
    ssl_certificate_key {{ dehydrated|cert_privkey(src.hostname) }};
    ssl_trusted_certificate {{ dehydrated|cert_chain(src.hostname) }};
    include {{ nginx.prefix.config }}/include/https_params.conf;
}
{% endif %}
{% endfor %}
